{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const authAPI = {\n  login: (email, password) => api.post('/api/auth/login', {\n    email,\n    password\n  }),\n  register: (email, password, first_name, last_name, username) => api.post('/api/auth/register', {\n    email,\n    password,\n    first_name,\n    last_name,\n    username\n  })\n};\nexport const profileAPI = {\n  get: () => api.get('/api/profile'),\n  update: data => api.put('/api/profile', data),\n  calculateCalories: data => api.post('/api/profile/calculate-calories', data)\n};\nexport const mealsAPI = {\n  add: data => api.post('/api/meals', data),\n  getByDate: date => api.get(`/api/meals/${date}`),\n  getByRange: (startDate, endDate) => api.get(`/api/meals/range/${startDate}/${endDate}`),\n  update: (id, data) => api.put(`/api/meals/${id}`, data),\n  delete: id => api.delete(`/api/meals/${id}`)\n};\nexport const diaryAPI = {\n  getMonth: (year, month) => api.get(`/api/diary/${year}/${month}`),\n  getDate: date => api.get(`/api/diary/date/${date}`),\n  getWeek: startDate => api.get(`/api/diary/week/${startDate}`),\n  getMonthSummary: (year, month) => api.get(`/api/diary/month/${year}/${month}/summary`)\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","post","register","first_name","last_name","username","profileAPI","get","update","data","put","calculateCalories","mealsAPI","add","getByDate","date","getByRange","startDate","endDate","id","delete","diaryAPI","getMonth","year","month","getDate","getWeek","getMonthSummary"],"sources":["C:/Users/arian/OneDrive/Desktop/Nutrition/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const authAPI = {\n  login: (email: string, password: string) => \n    api.post('/api/auth/login', { email, password }),\n  register: (email: string, password: string, first_name: string, last_name: string, username: string) => \n    api.post('/api/auth/register', { email, password, first_name, last_name, username }),\n};\n\nexport const profileAPI = {\n  get: () => api.get('/api/profile'),\n  update: (data: any) => api.put('/api/profile', data),\n  calculateCalories: (data: any) => api.post('/api/profile/calculate-calories', data),\n};\n\nexport const mealsAPI = {\n  add: (data: any) => api.post('/api/meals', data),\n  getByDate: (date: string) => api.get(`/api/meals/${date}`),\n  getByRange: (startDate: string, endDate: string) => \n    api.get(`/api/meals/range/${startDate}/${endDate}`),\n  update: (id: number, data: any) => api.put(`/api/meals/${id}`, data),\n  delete: (id: number) => api.delete(`/api/meals/${id}`),\n};\n\nexport const diaryAPI = {\n  getMonth: (year: number, month: number) => \n    api.get(`/api/diary/${year}/${month}`),\n  getDate: (date: string) => api.get(`/api/diary/date/${date}`),\n  getWeek: (startDate: string) => api.get(`/api/diary/week/${startDate}`),\n  getMonthSummary: (year: number, month: number) => \n    api.get(`/api/diary/month/${year}/${month}/summary`),\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}