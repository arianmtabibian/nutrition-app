{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arian\\\\OneDrive\\\\Desktop\\\\Nutrition\\\\client\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Verify token and get user info\n      api.get('/api/profile').then(response => {\n        console.log('Profile response in AuthContext:', response.data);\n        if (response.data.profile) {\n          setUser({\n            id: response.data.profile.user_id,\n            email: response.data.email,\n            first_name: response.data.profile.first_name || '',\n            last_name: response.data.profile.last_name || '',\n            username: response.data.profile.username || ''\n          });\n        } else {\n          // If no profile exists, try to get user info from token\n          console.log('No profile found, checking token for user info...');\n          // The token should contain user info, but we need to decode it\n          // For now, let's try to get user info from the auth verify endpoint\n          api.get('/api/auth/verify').then(verifyResponse => {\n            console.log('Verify response:', verifyResponse.data);\n            if (verifyResponse.data.user) {\n              setUser(verifyResponse.data.user);\n            }\n          }).catch(verifyError => {\n            console.error('Error verifying user:', verifyError);\n          });\n        }\n      }).catch(error => {\n        console.error('Error getting profile:', error);\n        // Token is invalid, remove it\n        localStorage.removeItem('token');\n        delete api.defaults.headers.common['Authorization'];\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n      console.log('Login response:', {\n        token: !!token,\n        userData\n      });\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const user = {\n        id: userData.id,\n        email: userData.email,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        username: userData.username\n      };\n      console.log('Setting user in context:', user);\n      setUser(user);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n    }\n  };\n  const register = async (email, password, first_name, last_name, username) => {\n    try {\n      const response = await api.post('/api/auth/register', {\n        email,\n        password,\n        first_name,\n        last_name,\n        username\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n      console.log('Register response:', {\n        token: !!token,\n        userData\n      });\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const user = {\n        id: userData.id,\n        email: userData.email,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        username: userData.username\n      };\n      console.log('Setting user in context after register:', user);\n      setUser(user);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const updateUser = userData => {\n    setUser(prev => prev ? {\n      ...prev,\n      ...userData\n    } : null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","get","then","response","console","log","data","profile","id","user_id","email","first_name","last_name","username","verifyResponse","catch","verifyError","error","removeItem","finally","login","password","post","userData","setItem","_error$response","_error$response$data","register","_error$response2","_error$response2$data","logout","updateUser","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arian/OneDrive/Desktop/Nutrition/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { api } from '../services/api';\n\ninterface User {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  username: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string, first_name: string, last_name: string, username: string) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Verify token and get user info\n      api.get('/api/profile')\n        .then(response => {\n          console.log('Profile response in AuthContext:', response.data);\n          if (response.data.profile) {\n            setUser({\n              id: response.data.profile.user_id,\n              email: response.data.email,\n              first_name: response.data.profile.first_name || '',\n              last_name: response.data.profile.last_name || '',\n              username: response.data.profile.username || ''\n            });\n          } else {\n            // If no profile exists, try to get user info from token\n            console.log('No profile found, checking token for user info...');\n            // The token should contain user info, but we need to decode it\n            // For now, let's try to get user info from the auth verify endpoint\n            api.get('/api/auth/verify')\n              .then(verifyResponse => {\n                console.log('Verify response:', verifyResponse.data);\n                if (verifyResponse.data.user) {\n                  setUser(verifyResponse.data.user);\n                }\n              })\n              .catch(verifyError => {\n                console.error('Error verifying user:', verifyError);\n              });\n          }\n        })\n        .catch((error) => {\n          console.error('Error getting profile:', error);\n          // Token is invalid, remove it\n          localStorage.removeItem('token');\n          delete api.defaults.headers.common['Authorization'];\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await api.post('/api/auth/login', { email, password });\n      const { token, user: userData } = response.data;\n      \n      console.log('Login response:', { token: !!token, userData });\n      \n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      const user = {\n        id: userData.id,\n        email: userData.email,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        username: userData.username\n      };\n      \n      console.log('Setting user in context:', user);\n      setUser(user);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Login failed');\n    }\n  };\n\n  const register = async (email: string, password: string, first_name: string, last_name: string, username: string) => {\n    try {\n      const response = await api.post('/api/auth/register', { email, password, first_name, last_name, username });\n      const { token, user: userData } = response.data;\n      \n      console.log('Register response:', { token: !!token, userData });\n      \n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      const user = {\n        id: userData.id,\n        email: userData.email,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        username: userData.username\n      };\n      \n      console.log('Setting user in context after register:', user);\n      setUser(user);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Registration failed');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n\n  const updateUser = (userData: Partial<User>) => {\n    setUser(prev => prev ? { ...prev, ...userData } : null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBtC,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACM,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACThB,GAAG,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;MAChE;MACAhB,GAAG,CAACsB,GAAG,CAAC,cAAc,CAAC,CACpBC,IAAI,CAACC,QAAQ,IAAI;QAChBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,QAAQ,CAACG,IAAI,CAAC;QAC9D,IAAIH,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE;UACzBf,OAAO,CAAC;YACNgB,EAAE,EAAEL,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACE,OAAO;YACjCC,KAAK,EAAEP,QAAQ,CAACG,IAAI,CAACI,KAAK;YAC1BC,UAAU,EAAER,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACI,UAAU,IAAI,EAAE;YAClDC,SAAS,EAAET,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACK,SAAS,IAAI,EAAE;YAChDC,QAAQ,EAAEV,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACM,QAAQ,IAAI;UAC9C,CAAC,CAAC;QACJ,CAAC,MAAM;UACL;UACAT,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;UAChE;UACA;UACA1B,GAAG,CAACsB,GAAG,CAAC,kBAAkB,CAAC,CACxBC,IAAI,CAACY,cAAc,IAAI;YACtBV,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAES,cAAc,CAACR,IAAI,CAAC;YACpD,IAAIQ,cAAc,CAACR,IAAI,CAACf,IAAI,EAAE;cAC5BC,OAAO,CAACsB,cAAc,CAACR,IAAI,CAACf,IAAI,CAAC;YACnC;UACF,CAAC,CAAC,CACDwB,KAAK,CAACC,WAAW,IAAI;YACpBZ,OAAO,CAACa,KAAK,CAAC,uBAAuB,EAAED,WAAW,CAAC;UACrD,CAAC,CAAC;QACN;MACF,CAAC,CAAC,CACDD,KAAK,CAAEE,KAAK,IAAK;QAChBb,OAAO,CAACa,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C;QACArB,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;QAChC,OAAOvC,GAAG,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MACrD,CAAC,CAAC,CACDmB,OAAO,CAAC,MAAM;QACbzB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0B,KAAK,GAAG,MAAAA,CAAOV,KAAa,EAAEW,QAAgB,KAAK;IACvD,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMxB,GAAG,CAAC2C,IAAI,CAAC,iBAAiB,EAAE;QAAEZ,KAAK;QAAEW;MAAS,CAAC,CAAC;MACvE,MAAM;QAAE1B,KAAK;QAAEJ,IAAI,EAAEgC;MAAS,CAAC,GAAGpB,QAAQ,CAACG,IAAI;MAE/CF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;QAAEV,KAAK,EAAE,CAAC,CAACA,KAAK;QAAE4B;MAAS,CAAC,CAAC;MAE5D3B,YAAY,CAAC4B,OAAO,CAAC,OAAO,EAAE7B,KAAK,CAAC;MACpChB,GAAG,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;MAEhE,MAAMJ,IAAI,GAAG;QACXiB,EAAE,EAAEe,QAAQ,CAACf,EAAE;QACfE,KAAK,EAAEa,QAAQ,CAACb,KAAK;QACrBC,UAAU,EAAEY,QAAQ,CAACZ,UAAU;QAC/BC,SAAS,EAAEW,QAAQ,CAACX,SAAS;QAC7BC,QAAQ,EAAEU,QAAQ,CAACV;MACrB,CAAC;MAEDT,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEd,IAAI,CAAC;MAC7CC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,OAAO0B,KAAU,EAAE;MAAA,IAAAQ,eAAA,EAAAC,oBAAA;MACnB,MAAM,IAAIvC,KAAK,CAAC,EAAAsC,eAAA,GAAAR,KAAK,CAACd,QAAQ,cAAAsB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBnB,IAAI,cAAAoB,oBAAA,uBAApBA,oBAAA,CAAsBT,KAAK,KAAI,cAAc,CAAC;IAChE;EACF,CAAC;EAED,MAAMU,QAAQ,GAAG,MAAAA,CAAOjB,KAAa,EAAEW,QAAgB,EAAEV,UAAkB,EAAEC,SAAiB,EAAEC,QAAgB,KAAK;IACnH,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMxB,GAAG,CAAC2C,IAAI,CAAC,oBAAoB,EAAE;QAAEZ,KAAK;QAAEW,QAAQ;QAAEV,UAAU;QAAEC,SAAS;QAAEC;MAAS,CAAC,CAAC;MAC3G,MAAM;QAAElB,KAAK;QAAEJ,IAAI,EAAEgC;MAAS,CAAC,GAAGpB,QAAQ,CAACG,IAAI;MAE/CF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;QAAEV,KAAK,EAAE,CAAC,CAACA,KAAK;QAAE4B;MAAS,CAAC,CAAC;MAE/D3B,YAAY,CAAC4B,OAAO,CAAC,OAAO,EAAE7B,KAAK,CAAC;MACpChB,GAAG,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;MAEhE,MAAMJ,IAAI,GAAG;QACXiB,EAAE,EAAEe,QAAQ,CAACf,EAAE;QACfE,KAAK,EAAEa,QAAQ,CAACb,KAAK;QACrBC,UAAU,EAAEY,QAAQ,CAACZ,UAAU;QAC/BC,SAAS,EAAEW,QAAQ,CAACX,SAAS;QAC7BC,QAAQ,EAAEU,QAAQ,CAACV;MACrB,CAAC;MAEDT,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEd,IAAI,CAAC;MAC5DC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,OAAO0B,KAAU,EAAE;MAAA,IAAAW,gBAAA,EAAAC,qBAAA;MACnB,MAAM,IAAI1C,KAAK,CAAC,EAAAyC,gBAAA,GAAAX,KAAK,CAACd,QAAQ,cAAAyB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBtB,IAAI,cAAAuB,qBAAA,uBAApBA,qBAAA,CAAsBZ,KAAK,KAAI,qBAAqB,CAAC;IACvE;EACF,CAAC;EAED,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACnBlC,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;IAChC,OAAOvC,GAAG,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACnDR,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMuC,UAAU,GAAIR,QAAuB,IAAK;IAC9C/B,OAAO,CAACwC,IAAI,IAAIA,IAAI,GAAG;MAAE,GAAGA,IAAI;MAAE,GAAGT;IAAS,CAAC,GAAG,IAAI,CAAC;EACzD,CAAC;EAED,MAAMU,KAAsB,GAAG;IAC7B1C,IAAI;IACJE,OAAO;IACP2B,KAAK;IACLO,QAAQ;IACRG,MAAM;IACNC;EACF,CAAC;EAED,oBACElD,OAAA,CAACC,WAAW,CAACoD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA5C,QAAA,EAChCA;EAAQ;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChD,GAAA,CA9HWF,YAAyC;AAAAmD,EAAA,GAAzCnD,YAAyC;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}