{"ast":null,"code":"/**\r\n * Utility functions for managing onboarding state\r\n */\n\nexport const ONBOARDING_STORAGE_KEY = 'onboarding_completed';\nexport const ONBOARDING_DATE_KEY = 'onboarding_completed_date';\n\n/**\r\n * Check if user has completed onboarding based on localStorage\r\n */\nexport const hasCompletedOnboardingLocally = () => {\n  return localStorage.getItem(ONBOARDING_STORAGE_KEY) === 'true';\n};\n\n/**\r\n * Mark onboarding as completed in localStorage\r\n */\nexport const markOnboardingCompleted = () => {\n  localStorage.setItem(ONBOARDING_STORAGE_KEY, 'true');\n  localStorage.setItem(ONBOARDING_DATE_KEY, new Date().toISOString());\n};\n\n/**\r\n * Clear onboarding completion status from localStorage\r\n */\nexport const clearOnboardingCompletion = () => {\n  localStorage.removeItem(ONBOARDING_STORAGE_KEY);\n  localStorage.removeItem(ONBOARDING_DATE_KEY);\n};\n\n/**\r\n * Get the date when onboarding was completed\r\n */\nexport const getOnboardingCompletionDate = () => {\n  const dateStr = localStorage.getItem(ONBOARDING_DATE_KEY);\n  return dateStr ? new Date(dateStr) : null;\n};\n\n/**\r\n * Check if user has completed onboarding based on profile data\r\n */\nexport const hasCompletedOnboardingFromProfile = profile => {\n  return profile && profile.daily_calories !== null && profile.daily_calories !== undefined && profile.daily_calories > 0 && profile.daily_protein !== null && profile.daily_protein !== undefined && profile.daily_protein > 0;\n};","map":{"version":3,"names":["ONBOARDING_STORAGE_KEY","ONBOARDING_DATE_KEY","hasCompletedOnboardingLocally","localStorage","getItem","markOnboardingCompleted","setItem","Date","toISOString","clearOnboardingCompletion","removeItem","getOnboardingCompletionDate","dateStr","hasCompletedOnboardingFromProfile","profile","daily_calories","undefined","daily_protein"],"sources":["C:/Users/arian/OneDrive/Desktop/Nutrition/client/src/utils/onboardingUtils.ts"],"sourcesContent":["/**\r\n * Utility functions for managing onboarding state\r\n */\r\n\r\nexport const ONBOARDING_STORAGE_KEY = 'onboarding_completed';\r\nexport const ONBOARDING_DATE_KEY = 'onboarding_completed_date';\r\n\r\n/**\r\n * Check if user has completed onboarding based on localStorage\r\n */\r\nexport const hasCompletedOnboardingLocally = (): boolean => {\r\n  return localStorage.getItem(ONBOARDING_STORAGE_KEY) === 'true';\r\n};\r\n\r\n/**\r\n * Mark onboarding as completed in localStorage\r\n */\r\nexport const markOnboardingCompleted = (): void => {\r\n  localStorage.setItem(ONBOARDING_STORAGE_KEY, 'true');\r\n  localStorage.setItem(ONBOARDING_DATE_KEY, new Date().toISOString());\r\n};\r\n\r\n/**\r\n * Clear onboarding completion status from localStorage\r\n */\r\nexport const clearOnboardingCompletion = (): void => {\r\n  localStorage.removeItem(ONBOARDING_STORAGE_KEY);\r\n  localStorage.removeItem(ONBOARDING_DATE_KEY);\r\n};\r\n\r\n/**\r\n * Get the date when onboarding was completed\r\n */\r\nexport const getOnboardingCompletionDate = (): Date | null => {\r\n  const dateStr = localStorage.getItem(ONBOARDING_DATE_KEY);\r\n  return dateStr ? new Date(dateStr) : null;\r\n};\r\n\r\n/**\r\n * Check if user has completed onboarding based on profile data\r\n */\r\nexport const hasCompletedOnboardingFromProfile = (profile: any): boolean => {\r\n  return profile && \r\n    profile.daily_calories !== null && \r\n    profile.daily_calories !== undefined && \r\n    profile.daily_calories > 0 &&\r\n    profile.daily_protein !== null && \r\n    profile.daily_protein !== undefined && \r\n    profile.daily_protein > 0;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,MAAMA,sBAAsB,GAAG,sBAAsB;AAC5D,OAAO,MAAMC,mBAAmB,GAAG,2BAA2B;;AAE9D;AACA;AACA;AACA,OAAO,MAAMC,6BAA6B,GAAGA,CAAA,KAAe;EAC1D,OAAOC,YAAY,CAACC,OAAO,CAACJ,sBAAsB,CAAC,KAAK,MAAM;AAChE,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMK,uBAAuB,GAAGA,CAAA,KAAY;EACjDF,YAAY,CAACG,OAAO,CAACN,sBAAsB,EAAE,MAAM,CAAC;EACpDG,YAAY,CAACG,OAAO,CAACL,mBAAmB,EAAE,IAAIM,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;AACrE,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,yBAAyB,GAAGA,CAAA,KAAY;EACnDN,YAAY,CAACO,UAAU,CAACV,sBAAsB,CAAC;EAC/CG,YAAY,CAACO,UAAU,CAACT,mBAAmB,CAAC;AAC9C,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMU,2BAA2B,GAAGA,CAAA,KAAmB;EAC5D,MAAMC,OAAO,GAAGT,YAAY,CAACC,OAAO,CAACH,mBAAmB,CAAC;EACzD,OAAOW,OAAO,GAAG,IAAIL,IAAI,CAACK,OAAO,CAAC,GAAG,IAAI;AAC3C,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,iCAAiC,GAAIC,OAAY,IAAc;EAC1E,OAAOA,OAAO,IACZA,OAAO,CAACC,cAAc,KAAK,IAAI,IAC/BD,OAAO,CAACC,cAAc,KAAKC,SAAS,IACpCF,OAAO,CAACC,cAAc,GAAG,CAAC,IAC1BD,OAAO,CAACG,aAAa,KAAK,IAAI,IAC9BH,OAAO,CAACG,aAAa,KAAKD,SAAS,IACnCF,OAAO,CAACG,aAAa,GAAG,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}