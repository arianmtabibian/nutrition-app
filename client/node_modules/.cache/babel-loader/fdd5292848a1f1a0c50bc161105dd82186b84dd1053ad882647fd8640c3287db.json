{"ast":null,"code":"import{useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';// Smart global protection hook - allows new users to complete onboarding once\nexport const useOnboardingProtection=()=>{const navigate=useNavigate();const location=useLocation();const{user}=useAuth();useEffect(()=>{// Only run this protection if user is authenticated\nif(!user)return;// Mark that user has accessed the app when they reach dashboard\n// This happens AFTER they complete onboarding, not before\nif(location.pathname.startsWith('/dashboard')){localStorage.setItem('hasAccessedApp','true');localStorage.setItem('lastAccess',new Date().toISOString());}// Note: We don't prevent onboarding access at the global level anymore\n// The Onboarding component itself handles the profile check to determine\n// if the user should be there or not\n},[location.pathname,user,navigate]);};","map":{"version":3,"names":["useEffect","useNavigate","useLocation","useAuth","useOnboardingProtection","navigate","location","user","pathname","startsWith","localStorage","setItem","Date","toISOString"],"sources":["C:/Users/arian/OneDrive/Desktop/Nutrition/client/src/hooks/useOnboardingProtection.ts"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n// Smart global protection hook - allows new users to complete onboarding once\r\nexport const useOnboardingProtection = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    // Only run this protection if user is authenticated\r\n    if (!user) return;\r\n    \r\n    // Mark that user has accessed the app when they reach dashboard\r\n    // This happens AFTER they complete onboarding, not before\r\n    if (location.pathname.startsWith('/dashboard')) {\r\n      localStorage.setItem('hasAccessedApp', 'true');\r\n      localStorage.setItem('lastAccess', new Date().toISOString());\r\n    }\r\n    \r\n    // Note: We don't prevent onboarding access at the global level anymore\r\n    // The Onboarding component itself handles the profile check to determine\r\n    // if the user should be there or not\r\n  }, [location.pathname, user, navigate]);\r\n};\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,OAASC,OAAO,KAAQ,yBAAyB,CAEjD;AACA,MAAO,MAAM,CAAAC,uBAAuB,CAAGA,CAAA,GAAM,CAC3C,KAAM,CAAAC,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAK,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEK,IAAK,CAAC,CAAGJ,OAAO,CAAC,CAAC,CAE1BH,SAAS,CAAC,IAAM,CACd;AACA,GAAI,CAACO,IAAI,CAAE,OAEX;AACA;AACA,GAAID,QAAQ,CAACE,QAAQ,CAACC,UAAU,CAAC,YAAY,CAAC,CAAE,CAC9CC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAE,MAAM,CAAC,CAC9CD,YAAY,CAACC,OAAO,CAAC,YAAY,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAC9D,CAEA;AACA;AACA;AACF,CAAC,CAAE,CAACP,QAAQ,CAACE,QAAQ,CAAED,IAAI,CAAEF,QAAQ,CAAC,CAAC,CACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}