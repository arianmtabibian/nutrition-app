{"ast":null,"code":"import axios from 'axios';\nimport { clearOnboardingCompletion } from '../utils/onboardingUtils';\n\n// Create axios instance with timeout for better performance\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 30000,\n  // 30 second timeout for post creation with images\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token - Use consistent auth system\napi.interceptors.request.use(config => {\n  // Try to get token from the new auth system first, fallback to old system\n  let token = localStorage.getItem('token');\n\n  // Check if we have the newer auth data format\n  const authDataStr = localStorage.getItem('nutritrack_auth_data');\n  if (authDataStr) {\n    try {\n      const authData = JSON.parse(authDataStr);\n      if (authData.token) {\n        token = authData.token;\n      }\n    } catch (error) {\n      console.warn('Failed to parse auth data:', error);\n    }\n  }\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors - More intelligent handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response3;\n  // Only redirect to login on actual authentication failures, not network issues\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    console.log('🔐 Authentication failed, clearing auth data and redirecting to login');\n\n    // Add a small delay to prevent race conditions with multiple API calls\n    setTimeout(() => {\n      // Clear all auth data using both systems\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      localStorage.removeItem('domain');\n      localStorage.removeItem('nutritrack_auth_data');\n\n      // Clear onboarding completion flag so user can go through onboarding again if they create a new account\n      clearOnboardingCompletion();\n\n      // Use React Router navigation instead of hard redirect to prevent 404s\n      if (!window.location.pathname.includes('/login') && !window.location.pathname.includes('/register')) {\n        // Dispatch a custom event that the AuthContext can handle\n        window.dispatchEvent(new CustomEvent('auth-logout'));\n      }\n    }, 100); // Small delay to prevent race conditions\n  } else if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {\n    // Network timeout - let AuthContext handle auth decisions, just log here\n    console.warn('🌐 Network timeout detected, letting AuthContext handle auth state');\n  } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) >= 500) {\n    // Server errors shouldn't cause logout\n    console.warn('🌐 Server error, keeping user logged in');\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const authAPI = {\n  login: (email, password) => api.post('/api/auth/login', {\n    email,\n    password\n  }),\n  register: (email, password, first_name, last_name, username) => api.post('/api/auth/register', {\n    email,\n    password,\n    first_name,\n    last_name,\n    username\n  })\n};\nexport const profileAPI = {\n  get: () => api.get('/api/profile', {\n    timeout: 10000\n  }),\n  // 10 second timeout\n  update: data => api.put('/api/profile', data, {\n    timeout: 15000\n  }),\n  // 15 second timeout\n  create: data => api.post('/api/profile/create', data, {\n    timeout: 15000\n  }),\n  // 15 second timeout\n  calculateCalories: data => api.post('/api/profile/calculate-calories', data),\n  health: () => api.get('/api/profile/health', {\n    timeout: 5000\n  }) // 5 second timeout for health check\n};\nexport const mealsAPI = {\n  add: data => api.post('/api/meals', data),\n  getByDate: date => api.get(`/api/meals/${date}`),\n  getByRange: (startDate, endDate) => api.get(`/api/meals/range/${startDate}/${endDate}`),\n  update: (id, data) => api.put(`/api/meals/${id}`, data),\n  delete: id => api.delete(`/api/meals/${id}`),\n  recalculateDailyNutrition: (startDate, endDate) => api.post('/api/meals/recalculate-daily-nutrition', {\n    startDate,\n    endDate\n  })\n};\nexport const diaryAPI = {\n  getMonth: (year, month) => api.get(`/api/diary/${year}/${month}`),\n  getDate: date => api.get(`/api/diary/date/${date}`),\n  getWeek: startDate => api.get(`/api/diary/week/${startDate}`),\n  getMonthSummary: (year, month) => api.get(`/api/diary/month/${year}/${month}/summary`)\n};\nexport const favoritesAPI = {\n  getAll: () => api.get('/api/favorites'),\n  create: data => api.post('/api/favorites', data),\n  createFromMeal: (mealId, customName) => api.post('/api/favorites/from-meal', {\n    mealId,\n    customName\n  }),\n  update: (id, data) => api.put(`/api/favorites/${id}`, data),\n  delete: id => api.delete(`/api/favorites/${id}`)\n};\nexport const socialAPI = {\n  // Posts\n  createPost: formData => {\n    return api.post('/api/social/posts', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      timeout: 45000 // Extra long timeout for post creation\n    });\n  },\n  getUserPosts: userId => api.get(`/api/social/posts/${userId}`),\n  getFeed: () => api.get('/api/social/feed'),\n  likePost: postId => api.post(`/api/social/posts/${postId}/like`),\n  bookmarkPost: postId => api.post(`/api/social/posts/${postId}/favorite`),\n  // Profile\n  getProfile: userId => api.get(`/api/social/profile/${userId}`),\n  getLikedPosts: userId => api.get(`/api/social/profile/${userId}/liked-posts`),\n  getBookmarkedPosts: userId => api.get(`/api/social/profile/${userId}/favorited-posts`),\n  // Comments\n  getComments: postId => api.get(`/api/social/posts/${postId}/comments`),\n  addComment: (postId, content) => api.post(`/api/social/posts/${postId}/comments`, {\n    content\n  }),\n  // Search\n  search: (query, limit = 5, offset = 0) => api.get(`/api/social/search?q=${encodeURIComponent(query)}&limit=${limit}&offset=${offset}`),\n  // Follow/Unfollow\n  followUser: userId => api.post(`/api/social/follow/${userId}`)\n};","map":{"version":3,"names":["axios","clearOnboardingCompletion","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","authDataStr","authData","JSON","parse","error","console","warn","Authorization","Promise","reject","response","_error$response","_error$response2","_error$response3","status","log","setTimeout","removeItem","window","location","pathname","includes","dispatchEvent","CustomEvent","code","message","authAPI","login","email","password","post","register","first_name","last_name","username","profileAPI","get","update","data","put","calculateCalories","health","mealsAPI","add","getByDate","date","getByRange","startDate","endDate","id","delete","recalculateDailyNutrition","diaryAPI","getMonth","year","month","getDate","getWeek","getMonthSummary","favoritesAPI","getAll","createFromMeal","mealId","customName","socialAPI","createPost","formData","getUserPosts","userId","getFeed","likePost","postId","bookmarkPost","getProfile","getLikedPosts","getBookmarkedPosts","getComments","addComment","content","search","query","limit","offset","encodeURIComponent","followUser"],"sources":["C:/Users/arian/OneDrive/Desktop/Nutrition/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { clearOnboardingCompletion } from '../utils/onboardingUtils';\n\n// Create axios instance with timeout for better performance\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 30000, // 30 second timeout for post creation with images\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token - Use consistent auth system\napi.interceptors.request.use(\n  (config) => {\n    // Try to get token from the new auth system first, fallback to old system\n    let token = localStorage.getItem('token');\n    \n    // Check if we have the newer auth data format\n    const authDataStr = localStorage.getItem('nutritrack_auth_data');\n    if (authDataStr) {\n      try {\n        const authData = JSON.parse(authDataStr);\n        if (authData.token) {\n          token = authData.token;\n        }\n      } catch (error) {\n        console.warn('Failed to parse auth data:', error);\n      }\n    }\n    \n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors - More intelligent handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Only redirect to login on actual authentication failures, not network issues\n    if (error.response?.status === 401 || error.response?.status === 403) {\n      console.log('🔐 Authentication failed, clearing auth data and redirecting to login');\n      \n      // Add a small delay to prevent race conditions with multiple API calls\n      setTimeout(() => {\n        // Clear all auth data using both systems\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('domain');\n        localStorage.removeItem('nutritrack_auth_data');\n        \n        // Clear onboarding completion flag so user can go through onboarding again if they create a new account\n        clearOnboardingCompletion();\n        \n        // Use React Router navigation instead of hard redirect to prevent 404s\n        if (!window.location.pathname.includes('/login') && !window.location.pathname.includes('/register')) {\n          // Dispatch a custom event that the AuthContext can handle\n          window.dispatchEvent(new CustomEvent('auth-logout'));\n        }\n      }, 100); // Small delay to prevent race conditions\n    } else if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {\n      // Network timeout - let AuthContext handle auth decisions, just log here\n      console.warn('🌐 Network timeout detected, letting AuthContext handle auth state');\n    } else if (error.response?.status >= 500) {\n      // Server errors shouldn't cause logout\n      console.warn('🌐 Server error, keeping user logged in');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const authAPI = {\n  login: (email: string, password: string) => \n    api.post('/api/auth/login', { email, password }),\n  register: (email: string, password: string, first_name: string, last_name: string, username: string) => \n    api.post('/api/auth/register', { email, password, first_name, last_name, username }),\n};\n\nexport const profileAPI = {\n  get: () => api.get('/api/profile', { timeout: 10000 }), // 10 second timeout\n  update: (data: any) => api.put('/api/profile', data, { timeout: 15000 }), // 15 second timeout\n  create: (data: any) => api.post('/api/profile/create', data, { timeout: 15000 }), // 15 second timeout\n  calculateCalories: (data: any) => api.post('/api/profile/calculate-calories', data),\n  health: () => api.get('/api/profile/health', { timeout: 5000 }), // 5 second timeout for health check\n};\n\nexport const mealsAPI = {\n  add: (data: any) => api.post('/api/meals', data),\n  getByDate: (date: string) => api.get(`/api/meals/${date}`),\n  getByRange: (startDate: string, endDate: string) => \n    api.get(`/api/meals/range/${startDate}/${endDate}`),\n  update: (id: number, data: any) => api.put(`/api/meals/${id}`, data),\n  delete: (id: number) => api.delete(`/api/meals/${id}`),\n  recalculateDailyNutrition: (startDate: string, endDate: string) => \n    api.post('/api/meals/recalculate-daily-nutrition', { startDate, endDate }),\n};\n\nexport const diaryAPI = {\n  getMonth: (year: number, month: number) => \n    api.get(`/api/diary/${year}/${month}`),\n  getDate: (date: string) => api.get(`/api/diary/date/${date}`),\n  getWeek: (startDate: string) => api.get(`/api/diary/week/${startDate}`),\n  getMonthSummary: (year: number, month: number) => \n    api.get(`/api/diary/month/${year}/${month}/summary`),\n};\n\nexport const favoritesAPI = {\n  getAll: () => api.get('/api/favorites'),\n  create: (data: any) => api.post('/api/favorites', data),\n  createFromMeal: (mealId: number, customName?: string) => \n    api.post('/api/favorites/from-meal', { mealId, customName }),\n  update: (id: number, data: any) => api.put(`/api/favorites/${id}`, data),\n  delete: (id: number) => api.delete(`/api/favorites/${id}`),\n};\n\nexport const socialAPI = {\n  // Posts\n  createPost: (formData: FormData) => {\n    return api.post('/api/social/posts', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      timeout: 45000, // Extra long timeout for post creation\n    });\n  },\n  getUserPosts: (userId: number) => api.get(`/api/social/posts/${userId}`),\n  getFeed: () => api.get('/api/social/feed'),\n  likePost: (postId: number) => api.post(`/api/social/posts/${postId}/like`),\n  bookmarkPost: (postId: number) => api.post(`/api/social/posts/${postId}/favorite`),\n  \n  // Profile\n  getProfile: (userId: number) => api.get(`/api/social/profile/${userId}`),\n  getLikedPosts: (userId: number) => api.get(`/api/social/profile/${userId}/liked-posts`),\n  getBookmarkedPosts: (userId: number) => api.get(`/api/social/profile/${userId}/favorited-posts`),\n  \n  // Comments\n  getComments: (postId: number) => api.get(`/api/social/posts/${postId}/comments`),\n  addComment: (postId: number, content: string) => \n    api.post(`/api/social/posts/${postId}/comments`, { content }),\n  \n  // Search\n  search: (query: string, limit: number = 5, offset: number = 0) => \n    api.get(`/api/social/search?q=${encodeURIComponent(query)}&limit=${limit}&offset=${offset}`),\n  \n  // Follow/Unfollow\n  followUser: (userId: number) => api.post(`/api/social/follow/${userId}`),\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}