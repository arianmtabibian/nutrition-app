{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arian\\\\OneDrive\\\\Desktop\\\\Nutrition\\\\client\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { storeAuthData, getAuthData, clearAuthData, hasValidAuth } from '../utils/authPersistence';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in - DOMAIN FLEXIBLE\n    const authData = getAuthData();\n    const currentDomain = window.location.origin;\n    console.log('üîê Auth check - Domain:', currentDomain);\n    console.log('üîê Auth data exists:', !!authData);\n    if (authData && hasValidAuth()) {\n      console.log('üîê Found valid auth data, verifying with backend...');\n      api.defaults.headers.common['Authorization'] = `Bearer ${authData.token}`;\n\n      // Verify token and get user info from the auth verify endpoint\n      api.get('/api/auth/verify').then(response => {\n        console.log('üîê Verify response in AuthContext:', response.data);\n        if (response.data.user) {\n          setUser(response.data.user);\n          // ALWAYS update auth data to current domain (domain migration)\n          storeAuthData(authData.token, response.data.user);\n          console.log('üîê User logged in successfully on domain:', currentDomain);\n          console.log('üîê Auth data migrated to current domain');\n        }\n      }).catch(error => {\n        var _error$response, _error$response2;\n        console.error('üîê Error verifying user:', error);\n\n        // Only clear auth if it's a 401/403 (invalid token)\n        // Don't clear on network errors (domain change issues)\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n          console.log('üîê Token invalid, clearing auth data');\n          clearAuthData();\n          delete api.defaults.headers.common['Authorization'];\n        } else {\n          console.log('üîê Network error, keeping auth data for retry');\n        }\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      console.log('üîê No valid auth data found, user not logged in');\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store authentication data using the new persistence system\n      storeAuthData(token, userData);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser({\n        id: userData.id,\n        email: userData.email,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        username: userData.username,\n        profile_picture: userData.profile_picture\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Login failed');\n    }\n  };\n  const register = async (email, password, first_name, last_name, username) => {\n    try {\n      const response = await api.post('/api/auth/register', {\n        email,\n        password,\n        first_name,\n        last_name,\n        username\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store authentication data using the new persistence system\n      storeAuthData(token, userData);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser({\n        id: userData.id,\n        email: userData.email,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        username: userData.username,\n        profile_picture: userData.profile_picture\n      });\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Registration failed');\n    }\n  };\n  const logout = () => {\n    // Clear all authentication data using the new persistence system\n    clearAuthData();\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const updateUser = userData => {\n    setUser(prev => prev ? {\n      ...prev,\n      ...userData\n    } : null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","storeAuthData","getAuthData","clearAuthData","hasValidAuth","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","authData","currentDomain","window","location","origin","console","log","defaults","headers","common","token","get","then","response","data","catch","error","_error$response","_error$response2","status","finally","login","email","password","post","userData","id","first_name","last_name","username","profile_picture","_error$response3","_error$response3$data","register","_error$response4","_error$response4$data","logout","updateUser","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arian/OneDrive/Desktop/Nutrition/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { api } from '../services/api';\nimport { storeAuthData, getAuthData, clearAuthData, hasValidAuth } from '../utils/authPersistence';\n\ninterface User {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  username: string;\n  profile_picture?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string, first_name: string, last_name: string, username: string) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in - DOMAIN FLEXIBLE\n    const authData = getAuthData();\n    const currentDomain = window.location.origin;\n    \n    console.log('üîê Auth check - Domain:', currentDomain);\n    console.log('üîê Auth data exists:', !!authData);\n    \n    if (authData && hasValidAuth()) {\n      console.log('üîê Found valid auth data, verifying with backend...');\n      api.defaults.headers.common['Authorization'] = `Bearer ${authData.token}`;\n      \n      // Verify token and get user info from the auth verify endpoint\n      api.get('/api/auth/verify')\n        .then(response => {\n          console.log('üîê Verify response in AuthContext:', response.data);\n          if (response.data.user) {\n            setUser(response.data.user);\n            // ALWAYS update auth data to current domain (domain migration)\n            storeAuthData(authData.token, response.data.user);\n            console.log('üîê User logged in successfully on domain:', currentDomain);\n            console.log('üîê Auth data migrated to current domain');\n          }\n        })\n        .catch((error) => {\n          console.error('üîê Error verifying user:', error);\n          \n          // Only clear auth if it's a 401/403 (invalid token)\n          // Don't clear on network errors (domain change issues)\n          if (error.response?.status === 401 || error.response?.status === 403) {\n            console.log('üîê Token invalid, clearing auth data');\n            clearAuthData();\n            delete api.defaults.headers.common['Authorization'];\n          } else {\n            console.log('üîê Network error, keeping auth data for retry');\n          }\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      console.log('üîê No valid auth data found, user not logged in');\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await api.post('/api/auth/login', { email, password });\n      const { token, user: userData } = response.data;\n      \n      // Store authentication data using the new persistence system\n      storeAuthData(token, userData);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      setUser({\n        id: userData.id,\n        email: userData.email,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        username: userData.username,\n        profile_picture: userData.profile_picture\n      });\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Login failed');\n    }\n  };\n\n  const register = async (email: string, password: string, first_name: string, last_name: string, username: string) => {\n    try {\n      const response = await api.post('/api/auth/register', { email, password, first_name, last_name, username });\n      const { token, user: userData } = response.data;\n      \n      // Store authentication data using the new persistence system\n      storeAuthData(token, userData);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      setUser({\n        id: userData.id,\n        email: userData.email,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        username: userData.username,\n        profile_picture: userData.profile_picture\n      });\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Registration failed');\n    }\n  };\n\n  const logout = () => {\n    // Clear all authentication data using the new persistence system\n    clearAuthData();\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n\n  const updateUser = (userData: Partial<User>) => {\n    setUser(prev => prev ? { ...prev, ...userData } : null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}